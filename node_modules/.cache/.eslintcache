[{"/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/index.tsx":"1","/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/reportWebVitals.ts":"2","/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/App.tsx":"3","/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/pages/Home.jsx":"4","/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/pages/Tasks.jsx":"5","/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/pages/Glossary.jsx":"6","/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/pages/Register.jsx":"7"},{"size":597,"mtime":1657131049503,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1656528742620,"results":"10","hashOfConfig":"9"},{"size":800,"mtime":1656528742612,"results":"11","hashOfConfig":"9"},{"size":951,"mtime":1656528742617,"results":"12","hashOfConfig":"9"},{"size":2133,"mtime":1656528742619,"results":"13","hashOfConfig":"9"},{"size":2196,"mtime":1656528742616,"results":"14","hashOfConfig":"9"},{"size":1375,"mtime":1656528742618,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18suirw",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/index.tsx",[],[],"/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/reportWebVitals.ts",[],[],"/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/App.tsx",["42"],[],"import \"./App.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Glossary from \"./pages/Glossary\";\nimport Tasks from \"./pages/Tasks\";\nimport Register from \"./pages/Register\";\n\n\nfunction getDataFromDb(this: any) {\n  fetch('http://localhost:3001/api/getData')\n    .then((data) => data.json())\n    .then((res) => this.setState({ data: res.data }));\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/glossary\" element={<Glossary />} />\n          <Route path=\"/tasks\" element={<Tasks />} />\n          <Route path=\"/register\" element={<Register />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/pages/Home.jsx",["43","44"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div>\n      <p id='open' onClick={openMenu}>Menu</p>\n      <div id='menu'>\n        <a id='close' onClick={closeMenu}>X</a>\n        <br></br>\n        <br></br>\n        <a href=\"/\">HOME</a>\n        <br></br>\n        <br></br>\n        <a href=\"/glossary\">GLOSSARY</a>\n        <br></br>\n        <br></br>\n        <a href=\"/tasks\">TASKS</a>\n        <br></br>\n        <br></br>\n        <a href=\"/register\">REGISTER</a>\n      </div>\n\n      <div id='main'>\n        <h1>HOME</h1>\n        <p>Welcome to the DSP Task Management System!</p>\n      </div>\n    </div>\n  );\n}\n\nfunction openMenu() {\n\tdocument.getElementById(\"menu\").style.width = '10%';\n\tdocument.getElementById(\"main\").style.width = '90%';\n}\n\nfunction closeMenu() {\n\tdocument.getElementById(\"menu\").style.width = '0%';\n\tdocument.getElementById(\"main\").style.width= '100%';\n}\n\nexport default Home;\n\n","/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/pages/Tasks.jsx",["45","46","47","48"],[],"import React from \"react\";\n\nconst Tasks = () => {\n\treturn (\n\t\t<div>\n\t\t\t<p id='open' onClick={openMenu}>Menu</p>\n\t\t\t<div id='menu'>\n\t\t\t\t<a id='close' onClick={closeMenu}>X</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/\">HOME</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/glossary\">GLOSSARY</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/tasks\">TASKS</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/register\">REGISTER</a>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div id='main'>\n\t\t\t\t<h1>TASKS</h1>\n\t\t\t\t<label htmlFor=\"task-search\">Search for Tasks:</label>\n\t\t\t\t<input id=\"tasksearch\" type=\"text\" name=\"task-search\" />\n\t\t\t\t<button id=\"tasksearchbutton\" type=\"button\" onClick={searchTasks}>Search</button>\n\t\t\t\t<div id=\"tasksdiv\">\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<script>\n\n\t\t\t</script>\n\t\t</div>\n\t);\n};\n\nfunction openMenu() {\n\tdocument.getElementById(\"menu\").style.width = '10%';\n\tdocument.getElementById(\"main\").style.width = '90%';\n}\n\nfunction closeMenu() {\n\tdocument.getElementById(\"menu\").style.width = '0%';\n\tdocument.getElementById(\"main\").style.width= '100%';\n}\n\nfunction searchTasks() {\n\tlet tasksQuery = document.getElementById('tasksearch').value\n\tlet link;\n\tif (tasksQuery == \"\"){\n\t\tlink = \"http://localhost:3001/tasks\";\n\t} else {\n\t\tlink = 'http://localhost:3001/tasks/' + tasksQuery\n\t}\n    fetch(link, { method: 'GET' }) .then(data => data.json()) .then(json => {\n\t\t\tlet tasks = json['data'];\n\t\t\tlet tasksdiv = document.getElementById('tasksdiv');\n\t\t\ttasksdiv.innerHTML = \"\";\n\n\t\t\tfor (var i = 0; i < tasks.length; i++){\n\t\t\t\tlet name = document.createElement('p')\n\t\t\t\tname.innerHTML = JSON.stringify(tasks[i].name)\n\t\t\t\tdocument.getElementById('tasksdiv').append(name)\n\n\t\t\t\tlet username = document.createElement('p')\n\t\t\t\tusername.innerHTML = JSON.stringify(\"Assigned to: \" + tasks[i].username)\n\t\t\t\tdocument.getElementById('tasksdiv').append(username)\n\n\t\t\t\tlet datetime = document.createElement('p')\n\t\t\t\tdatetime.innerHTML = JSON.stringify(\"Due: \" + tasks[i].datetimeformat)\n\t\t\t\tdocument.getElementById('tasksdiv').append(datetime)\n\n\t\t\t\tlet br = document.createElement('br')\n\t\t\t\tdocument.getElementById('tasksdiv').append(br)\n\t\t\t\t\n\t\t\t}\n\t})\n}\nexport default Tasks;\n","/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/pages/Glossary.jsx",["49","50"],[],"import React from \"react\";\n\nconst Glossary = () => {\n\treturn (\n\t\t<div>\n\t\t\t<p id='open' onClick={openMenu}>Menu</p>\n\t\t\t<div id='menu'>\n\t\t\t\t<a id='close' onClick={closeMenu}>X</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/\">HOME</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/glossary\">GLOSSARY</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/tasks\">TASKS</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/register\">REGISTER</a>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div id='main'>\n\t\t\t\t<h1>GLOSSARY</h1>\n\t\t\t\t<label htmlFor=\"glossary-search\">Search for Glossary Entry:</label>\n\t\t\t\t<input id=\"glossarysearch\" type=\"text\" name=\"glossary-search\" />\n\t\t\t\t<button id=\"glossarysearchbutton\" type=\"button\" onClick={searchGlossary}>Search</button>\n\t\t\t\t<div id=\"glossarydiv\">\n\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nfunction openMenu() {\n\tdocument.getElementById(\"menu\").style.width = '10%';\n\tdocument.getElementById(\"main\").style.width = '90%';\n}\n\nfunction closeMenu() {\n\tdocument.getElementById(\"menu\").style.width = '0%';\n\tdocument.getElementById(\"main\").style.width= '100%';\n}\n\nfunction searchGlossary() {\n\tlet glossaryQuery = document.getElementById('glossarysearch').value\n\tlet link;\n\tif (glossaryQuery == \"\"){\n\t\tlink = \"http://localhost:3001/glossary\";\n\t} else {\n\t\tlink = 'http://localhost:3001/glossary/' + glossaryQuery\n\t}\n    fetch(link, { method: 'GET' })\n        .then(data => data.json())\n        .then(json => {\n\t\t\tlet glossary = json['data'];\n\t\t\tlet glossarydiv = document.getElementById('glossarydiv');\n\t\t\tglossarydiv.innerHTML = \"\";\n\n\t\t\tfor (var i = 0; i < glossary.length; i++){\n\t\t\t\tlet name = document.createElement('p')\n\t\t\t\tname.innerHTML = JSON.stringify(glossary[i].name)\n\t\t\t\tdocument.getElementById('glossarydiv').append(name)\n\n\t\t\t\tlet acronym = document.createElement('p')\n\t\t\t\tacronym.innerHTML = JSON.stringify(glossary[i].acronym)\n\t\t\t\tdocument.getElementById('glossarydiv').append(acronym)\n\n\t\t\t\tlet definition = document.createElement('p')\n\t\t\t\tdefinition.innerHTML = JSON.stringify(glossary[i].definition)\n\t\t\t\tdocument.getElementById('glossarydiv').append(definition)\n\n\t\t\t\tlet br = document.createElement('br')\n\t\t\t\tdocument.getElementById('glossarydiv').append(br)\n\t\t\t\t\n\t\t\t}\n\t\t})\n}\n\nexport default Glossary;\n\n","/Users/guledmoh12/Desktop/Work/task-manager-react-app/src/pages/Register.jsx",["51"],[],"import React from \"react\";\n\nconst Register = () => {\n\treturn (\n\t\t<div>\n\t\t\t<p id='open' onClick={openMenu}>Menu</p>\n\t\t\t<div id='menu'>\n\t\t\t\t<a id='close' onClick={closeMenu}>X</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/\">HOME</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/glossary\">GLOSSARY</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/tasks\">TASKS</a>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<a href=\"/register\">REGISTER</a>\n\t\t\t</div>\n\t\t\t<div id='main'>\n\t\t\t\t<h1>REGISTER</h1>\t\n\t\t\t\t<label>Username:</label>\n\t\t\t\t<input id=\"username\" type=\"text\"/>\n\t\t\t\t<label> Password:</label>\n\t\t\t\t<input id=\"password\" type=\"password\"/>\n\t\t\t\t<button id=\"register\" type=\"button\" onClick={register}>Register</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nfunction openMenu() {\n\tdocument.getElementById(\"menu\").style.width = '10%';\n\tdocument.getElementById(\"main\").style.width = '90%';\n}\n\nfunction closeMenu() {\n\tdocument.getElementById(\"menu\").style.width = '0%';\n\tdocument.getElementById(\"main\").style.width= '100%';\n}\n\nfunction register() {\n\tconst newUserRequest = {\n\t\tmethod: 'PUT',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t\tbody: JSON.stringify({ \n\t\t\tusername: document.getElementById('username').value,\n\t\t\tpassword: document.getElementById('password').value \n\t\t})\n\t};\n\tfetch('http://localhost:3001/register', newUserRequest) \n\t.then(response => alert(response.json()));\n}\n\nexport default Register;",{"ruleId":"52","severity":1,"message":"53","line":9,"column":10,"nodeType":"54","messageId":"55","endLine":9,"endColumn":23},{"ruleId":"56","severity":1,"message":"57","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":9,"column":9,"nodeType":"60","endLine":9,"endColumn":43},{"ruleId":"58","severity":1,"message":"59","line":8,"column":5,"nodeType":"60","endLine":8,"endColumn":39},{"ruleId":"61","severity":1,"message":"62","line":52,"column":17,"nodeType":"63","messageId":"64","endLine":52,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":57,"column":5,"nodeType":"67","messageId":"68","endLine":57,"endColumn":68,"fix":"69"},{"ruleId":"65","severity":1,"message":"66","line":57,"column":5,"nodeType":"67","messageId":"68","endLine":57,"endColumn":41,"fix":"70"},{"ruleId":"58","severity":1,"message":"59","line":8,"column":5,"nodeType":"60","endLine":8,"endColumn":39},{"ruleId":"61","severity":1,"message":"62","line":49,"column":20,"nodeType":"63","messageId":"64","endLine":49,"endColumn":22},{"ruleId":"58","severity":1,"message":"59","line":8,"column":5,"nodeType":"60","endLine":8,"endColumn":39},"@typescript-eslint/no-unused-vars","'getDataFromDb' is defined but never used.","Identifier","unusedVar","no-unused-vars","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"71","text":"72"},{"range":"73","text":"72"},[1319,1321],".",[1292,1294]]